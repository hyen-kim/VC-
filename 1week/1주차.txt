
=========================================================

제 1장 윈도우 프로그래밍

=========================================================

● 윈도우 프로그래밍이란 ?
- 사용자가 발생시키는 이벤트에 대한 메시지를 처리하는 것
- 메시지 기반 프로그래밍
- 이벤트 기반 프로그래밍


● 윈도우 프로그래밍하는 방법
- Win32 SDK 	// 저수준
- MFC		// 쉽게 작성


● 윈도우 프로그래밍의 기본 구조
- 초기화 부분
- 메시지를 처리하는 부분


● 실제 프로그램에서의 형태
- 초기화 부분
Int WINAPI WinMain
{
	초기화부분
}

- 메시지 처리 부분
LRESUIT CALLBACK WndProc(...)
{
	메시지 처리 루틴
}


● WinMain 함수
- 함수 원형과 초기화 내용
Int WINAPI WinMain(HINSTANCE hlnstance, HINSTANCE
		   hPreVlnstance, LPTSTR lpszCmdLine, int nCmdShow)
{
	① 윈도우 클래스 생성
	② 윈도우 클래스 등록
	③ 프레임 윈도우 생성
	④ 프레임 윈도우 화면에 표시
	⑤ 메시지 큐로부터 메시지를 받아 해당 프로시저로 보냄
}


● Procedure
- 윈도우는 Message Driven 방식
- 메시지를 처리하는 함수를 procedure라 한다.
- 보통 함수명 다음에 Proc가 붙으면 프로시저로 보면 된다.
- 프로시저는 여러 개가 될 수 있다.
	: 윈도우 클래스마다 수행되는 프로시저가 다르다.



● WinPro
- 윈도우에서 들어온 메시지를 switch문을 이용하여 처리하는 루틴이다.
- 함수 원형과 메시지 처리 형채
Switch(Msg)
{
	해당 메시지에 대한 처리
}




< 실습 프로그램의 분석 >

● windows.h 파일
- 이 파일은 윈도우 애플리케이션을 작성하는데 필요한 매크로, 각종 API 함수,
  메시지 등이 선언된 헤더 파일이다.

● WinMain() 함수
① 운영체제에 윈도우를 생성하고 등록한다.
② 메모리에 프레임 윈도우를 생성하고 속성을 초기화하여 화면에 표시될 수 있도록 한다.
③ 메시지 루프를 생성하여 해당 윈도우에 대한 메시지를 메시지 큐로부터 받아와 메시지를 해당 윈도우 프로시저로 보낸다.


● WndProc() 함수
① 메시지를 switch문을 이용하여 처리


< 정리 >
윈도우의 초기화 부분은 5가지로 나뉘게 된다.
윈도우 생성, 등록, 프레임윈도우를 메모리에 생성, 프레임윈도우를 화면에 표시, 메세지를 담아서 처리(전달)

메세지를 처리하는 부분은 마우스나 출력 마이크입력 키보드 입력 등 os에서 받아서 메시지 큐에 담아놓는다
메시지 루프가 받아서 윈도우 프로시저로 던지고 실행되는 형식




< 윈도우에 텍스트를 출력하는 방법 >

● TextOut() 함수
- 기본적인 텍스트 출력

● DrawText() 함수
- 문자를 출력할 때 어느 영역을 정하고 이 영역에 출력하는 함수

● 출력형식 플러그 
- 이미지 참조 -> 출력형식플러그.png


● 윈도우 프로그램의 기본 형식
- 핸들을 받아서 그 핸들을 사용하거나 핸들을 만들어서 설정하여 사용한다.
	-> 라인을 그린다
	-> 그릴 화면 핸들을 받고, 라인을 그릴 펜이라는 핸들을 만들고,
	   펜이라는 핸들을 이용하여 그릴 화면 핸들에 라인을 그린다.	

- 구조체로 시작하여 구조체로 끝난다.
	-> H가 붙지 않는 이상한 것은 모두 구조체이다.


● MSG 구조체
- 메시지 큐에 저장되는 정보를 담고 있는 구조체 


● WINDOWCLASSEX 구조체
- 윈도우 속성에 대한 정보를 포함하는 구조체


● PAINTSTRUCT 구조체
- 이 구조체는 텍스트나 이미지를 윈도우의 클라이언트 영역에 그리고자 할 때, 
  사용자 정보를 포함


● RECT 구조체
- 사각형 형태의 좌표를 지정하는 구조체



 
< 헝가리언 표기법 >
- 변수 이름은 데이터 형식을 의미하는 하나 이상의 소문자로 시작한다.
- 작성한 프로그램에서 오류나 버그가 발생하기 전에 에러를 방지할 수 있게 해준다.
	-> 변수의 사용과 더불어 데이터 형식을 기술해줌으로 써, 
 	   데이터 형식 불일치 같은코딩 오류를 방지


● 윈도우 시스템의 이해	**
- 윈도우는 GUI 이다.
- 윈도우는 멀티태스킹을 지원한다.
- 윈도우는 메시지 기반 구조이다.	--> 이벤트를 받아서 처리하는 구조
- 읜도우는 윈도우 프로시저를 호출한다.	--> 메시지를 받아서 처리를 해줘야하기 때문에




< 전체적인 정리 >
윈도우 프로그래밍는 메시지기반 이벤트 기반이다.
SDK, MFC 두가지 방식으로 존재한다.

프로시저란 메시지를 처리하는 함수들을 의미한다.


